/*
 * Copyright (C) 2013 Daniel Pfeifer <daniel@pfeifer-mail.de>
 *
 * Distributed under the Boost Software License, Version 1.0.
 * See accompanying file LICENSE_1_0.txt or copy at
 *   http://www.boost.org/LICENSE_1_0.txt
 */

abstract repository common_branches
{
  branches
  {
    [38328:     ] "/trunk/"       : "master";
    [38327:38327] "/devel/"       : "master";
    [     :38326] "/trunk/boost/" : "master";

    // remember: this is the release _preparation_ branch, not git-flow master!
    [40341:     ] "/branches/release/" : "release";

    [ 7620:     ] "/branches/unlabeled-1.1.1/boost/" : "old-branches/unlabeled-1.1.1";
    [ 7671:     ] "/branches/iterator-adaptors/boost/" : "old-branches/iterator-adaptors";
    [ 7673:     ] "/branches/conversion/boost/" : "old-branches/conversion";
    [ 7698:     ] "/branches/boost-graph-library/boost/" : "old-branches/boost-graph-library";
    [ 7808:     ] "/branches/regex-sub/boost/" : "old-branches/regex-sub";
    [ 7931:     ] "/branches/boost/boost/" : "old-branches/boost";
    [ 7994:     ] "/branches/numerics/boost/" : "old-branches/numerics";
    [ 8005:     ] "/branches/to_python_experiments/boost/" : "old-branches/to_python_experiments";
    [ 8022:     ] "/branches/coercion_experiments/boost/" : "old-branches/coercion_experiments";
    [ 8236:     ] "/branches/data_driven/boost/" : "old-branches/data_driven";
    [ 8316:     ] "/branches/error_handling/boost/" : "old-branches/error_handling";
    [ 8327:     ] "/branches/python/boost/" : "old-branches/python";
    [ 8368:     ] "/branches/cursor/boost/" : "old-branches/cursor";
    [ 8400:     ] "/branches/shared_modules/boost/" : "old-branches/shared_modules";
    [ 8452:     ] "/branches/build_system/boost/" : "old-branches/build_system";
    [ 8505:     ] "/branches/type_traits2/boost/" : "old-branches/type_traits2";
    [ 8508:     ] "/branches/unlabeled-1.1.1.1.2/boost/" : "old-branches/unlabeled-1.1.1.1.2";
    [ 8587:     ] "/branches/boostify/boost/" : "old-branches/boostify";
    [ 9063:     ] "/branches/better_indirect/boost/" : "old-branches/better_indirect";
    [ 9294:     ] "/branches/named-args/boost/" : "old-branches/named-args";
    [ 9348:     ] "/branches/moved_pointer/boost/" : "old-branches/moved_pointer";
    [ 9374:     ] "/branches/null_ptr_is_none/boost/" : "old-branches/null_ptr_is_none";
    [ 9444:     ] "/branches/unlabeled-1.1.1.1.10/boost/" : "old-branches/unlabeled-1.1.1.1.10";
    [ 9444:     ] "/branches/unlabeled-1.1.1.1.6/boost/" : "old-branches/unlabeled-1.1.1.1.6";
    [ 9444:     ] "/branches/unlabeled-1.1.1.1.8/boost/" : "old-branches/unlabeled-1.1.1.1.8";
    [ 9444:     ] "/branches/unlabeled-1.1.4/boost/" : "old-branches/unlabeled-1.1.4";
    [ 9444:     ] "/branches/unlabeled-1.1.8/boost/" : "old-branches/unlabeled-1.1.8";
    [ 9444:     ] "/branches/unlabeled-1.12.2/boost/" : "old-branches/unlabeled-1.12.2";
    [ 9444:     ] "/branches/unlabeled-1.13.2/boost/" : "old-branches/unlabeled-1.13.2";
    [ 9444:     ] "/branches/unlabeled-1.15.2/boost/" : "old-branches/unlabeled-1.15.2";
    [ 9444:     ] "/branches/unlabeled-1.16.2/boost/" : "old-branches/unlabeled-1.16.2";
    [ 9444:     ] "/branches/unlabeled-1.19.2/boost/" : "old-branches/unlabeled-1.19.2";
    [ 9444:     ] "/branches/unlabeled-1.2.8/boost/" : "old-branches/unlabeled-1.2.8";
    [ 9444:     ] "/branches/unlabeled-1.21.2/boost/" : "old-branches/unlabeled-1.21.2";
    [ 9444:     ] "/branches/unlabeled-1.25.2/boost/" : "old-branches/unlabeled-1.25.2";
    [ 9444:     ] "/branches/unlabeled-1.3.2/boost/" : "old-branches/unlabeled-1.3.2";
    [ 9444:     ] "/branches/unlabeled-1.3.8/boost/" : "old-branches/unlabeled-1.3.8";
    [ 9444:     ] "/branches/unlabeled-1.37.2/boost/" : "old-branches/unlabeled-1.37.2";
    [ 9444:     ] "/branches/unlabeled-1.37.6/boost/" : "old-branches/unlabeled-1.37.6";
    [ 9444:     ] "/branches/unlabeled-1.4.2/boost/" : "old-branches/unlabeled-1.4.2";
    [ 9444:     ] "/branches/unlabeled-1.4.6/boost/" : "old-branches/unlabeled-1.4.6";
    [ 9444:     ] "/branches/unlabeled-1.65.2/boost/" : "old-branches/unlabeled-1.65.2";
    [ 9444:     ] "/branches/unlabeled-1.9.2/boost/" : "old-branches/unlabeled-1.9.2";
    [ 9569:     ] "/branches/more1/boost/" : "old-branches/more1";
    [ 9818:     ] "/branches/ralf_grosse_kunstleve/boost/" : "old-branches/ralf_grosse_kunstleve";
    [10226:     ] "/branches/boost_python_friend_fixes/boost/" : "old-branches/boost_python_friend_fixes";
    [10251:     ] "/branches/persistence-initial/boost/" : "old-branches/persistence-initial";
    [10262:     ] "/branches/build-developement/boost/" : "old-branches/build-developement";
    [10461:     ] "/branches/iter-adaptor-and-categories/boost/" : "old-branches/iter-adaptor-and-categories";
    [10468:     ] "/branches/build-development-2/boost/" : "old-branches/build-development-2";
    [10646:     ] "/branches/build_development-gcc-unix/boost/" : "old-branches/build_development-gcc-unix";
    [10647:     ] "/branches/build-development-gcc-unix/boost/" : "old-branches/build-development-gcc-unix";
    [10727:     ] "/branches/boost_python_richcmp/boost/" : "old-branches/boost_python_richcmp";
    [10967:     ] "/branches/rich_cons/boost/" : "old-branches/rich_cons";
    [11059:     ] "/branches/tuples_subnamespace/boost/" : "old-branches/tuples_subnamespace";
    [11085:     ] "/branches/split-config/boost/" : "old-branches/split-config";
    [11111:     ] "/branches/tmpw2001-paper/boost/" : "old-branches/tmpw2001-paper";
    [11217:     ] "/branches/thread-initial/boost/" : "old-branches/thread-initial";
    [11224:     ] "/branches/jam-src/boost/" : "old-branches/jam-src";
    [11348:     ] "/branches/build-development/boost/" : "old-branches/build-development";
    [11529:     ] "/branches/jam_src/boost/" : "old-branches/jam_src";
    [11537:     ] "/branches/iterator_adaptor_update/boost/" : "old-branches/iterator_adaptor_update";
    [11675:     ] "/branches/void_returns/boost/" : "old-branches/void_returns";
    [11865:     ] "/branches/pro7_void_returns/boost/" : "old-branches/pro7_void_returns";
    [12126:     ] "/branches/newbpl/boost/" : "old-branches/newbpl";
    [12128:     ] "/branches/rollback/boost/" : "old-branches/rollback";
    [12748:     ] "/branches/RC_1_27_0/boost/" : "old-branches/RC_1_27_0";
    [12891:     ] "/branches/test-development/boost/" : "old-branches/test-development";
    [12898:     ] "/branches/lambda_development/boost/" : "old-branches/lambda_development";
    [13123:     ] "/branches/perforce_jam_2_4/boost/" : "old-branches/perforce_jam_2_4";
    [13265:     ] "/branches/perforce_2_4_merge/boost/" : "old-branches/perforce_2_4_merge";
    [13336:     ] "/branches/compiler_supported_error_messages/boost/" : "old-branches/compiler_supported_error_messages";
    [13392:     ] "/branches/boost_build_v2/boost/" : "old-branches/boost_build_v2";
    [13504:     ] "/branches/unlabeled-1.10.2/boost/" : "old-branches/unlabeled-1.10.2";
    [13504:     ] "/branches/unlabeled-1.10.4/boost/" : "old-branches/unlabeled-1.10.4";
    [13504:     ] "/branches/unlabeled-1.2.6/boost/" : "old-branches/unlabeled-1.2.6";
    [13504:     ] "/branches/unlabeled-1.3.6/boost/" : "old-branches/unlabeled-1.3.6";
    [13504:     ] "/branches/unlabeled-1.5.2/boost/" : "old-branches/unlabeled-1.5.2";
    [13504:     ] "/branches/unlabeled-1.5.4/boost/" : "old-branches/unlabeled-1.5.4";
    [13504:     ] "/branches/unlabeled-1.6.2/boost/" : "old-branches/unlabeled-1.6.2";
    [13504:     ] "/branches/unlabeled-1.8.2/boost/" : "old-branches/unlabeled-1.8.2";
    [13513:     ] "/branches/unlabeled-1.18.2/boost/" : "old-branches/unlabeled-1.18.2";
    [13513:     ] "/branches/unlabeled-1.7.2/boost/" : "old-branches/unlabeled-1.7.2";
    [13515:     ] "/branches/unlabeled-1.11.2/boost/" : "old-branches/unlabeled-1.11.2";
    [13516:     ] "/branches/unlabeled-1.1.6/boost/" : "old-branches/unlabeled-1.1.6";
    [13516:     ] "/branches/unlabeled-1.14.2/boost/" : "old-branches/unlabeled-1.14.2";
    [13516:     ] "/branches/unlabeled-1.7.4/boost/" : "old-branches/unlabeled-1.7.4";
    [13537:     ] "/branches/lambda_development_during_review/boost/" : "old-branches/lambda_development_during_review";
    [13824:     ] "/branches/function_v2/boost/" : "old-branches/function_v2";
    [13845:     ] "/branches/aix_so/boost/" : "old-branches/aix_so";
    [14281:     ] "/branches/feature_branch-update_rule/boost/" : "old-branches/feature_branch-update_rule";
    [14776:     ] "/branches/unit_test_development/boost/" : "old-branches/unit_test_development";
    [14788:     ] "/branches/RC_1_28_0/boost/" : "old-branches/RC_1_28_0";
    [14963:     ] "/branches/python-v2-dev/boost/" : "old-branches/python-v2-dev";
    [15286:     ] "/branches/mpl-development/boost/" : "old-branches/mpl-development";
    [15294:     ] "/branches/matrix_development/boost/" : "old-branches/matrix_development";
    [15354:     ] "/branches/python_v2_API_restructure/boost/" : "old-branches/python_v2_API_restructure";
    [15426:     ] "/branches/mpl_v2/boost/" : "old-branches/mpl_v2";
    [16126:     ] "/branches/thread_development/boost/" : "old-branches/thread_development";
    [16497:     ] "/branches/RC_1_29_0/boost/" : "old-branches/RC_1_29_0";
    [16590:     ] "/branches/fs_review/boost/" : "old-branches/fs_review";
    [16634:     ] "/branches/coding_guidelines/boost/" : "old-branches/coding_guidelines";
    [16664:     ] "/branches/sane-testing/boost/" : "old-branches/sane-testing";
    [16679:     ] "/branches/wg21_random_proposal/boost/" : "old-branches/wg21_random_proposal";
    [17829:     ] "/branches/unlabeled-1.23.2/boost/" : "old-branches/unlabeled-1.23.2";
    [18263:     ] "/branches/unlabeled-1.1.2/boost/" : "old-branches/unlabeled-1.1.2";
    [18428:     ] "/branches/regex-4/boost/" : "old-branches/regex-4";
    [18773:     ] "/branches/mpl_v2_2/boost/" : "old-branches/mpl_v2_2";
    [19413:     ] "/branches/regex-4-1/boost/" : "old-branches/regex-4-1";
    [19937:     ] "/branches/bbv1_cross_project/boost/" : "old-branches/bbv1_cross_project";
    [20545:     ] "/branches/alternative_regression/boost/" : "old-branches/alternative_regression";
    [20823:     ] "/branches/build_for_distribution/boost/" : "old-branches/build_for_distribution";
    [20904:     ] "/branches/simplify/boost/" : "old-branches/simplify";
    [21052:     ] "/branches/RC_1_30_0/boost/" : "old-branches/RC_1_30_0";
    [21992:     ] "/branches/unlabeled-1.2.2/boost/" : "old-branches/unlabeled-1.2.2";
    [22197:     ] "/branches/indexing_v2/boost/" : "old-branches/indexing_v2";
    [22682:     ] "/branches/function_signature_patches_1_31/boost/" : "old-branches/function_signature_patches_1_31";
    [23328:     ] "/branches/RC_1_31_0/boost/" : "old-branches/RC_1_31_0";
    [23859:     ] "/branches/thread_dev/boost/" : "old-branches/thread_dev";
    [24358:     ] "/branches/FUSION_MSVC/boost/" : "old-branches/FUSION_MSVC";
    [24537:     ] "/branches/graph_devel/boost/" : "old-branches/graph_devel";
    [24857:     ] "/branches/mplbook/boost/" : "old-branches/mplbook";
    [25775:     ] "/branches/graph_devel_1_33_0/boost/" : "old-branches/graph_devel_1_33_0";
    [26479:     ] "/branches/SPIRIT_RC_1_6_2/boost/" : "old-branches/SPIRIT_RC_1_6_2";
    [26582:     ] "/branches/SPIRIT_RC_1_8_2/boost/" : "old-branches/SPIRIT_RC_1_8_2";
    [26621:     ] "/branches/uBLAS_pure/boost/" : "old-branches/uBLAS_pure";
    [26683:     ] "/branches/regex5/boost/" : "old-branches/regex5";
    [26962:     ] "/branches/RC_1_32_0/boost/" : "old-branches/RC_1_32_0";
    [28262:     ] "/branches/logo_contest_images/boost/" : "old-branches/logo_contest_images";
    [29303:     ] "/branches/parameter-post-1_33/boost/" : "old-branches/parameter-post-1_33";
    [29890:     ] "/branches/QUICKBOOK_INCLUDE/boost/" : "old-branches/QUICKBOOK_INCLUDE";
    [29935:     ] "/branches/uBLAS_assignment_sematics/boost/" : "old-branches/uBLAS_assignment_sematics";
    [30164:     ] "/branches/robstewart/boost/" : "old-branches/robstewart";
    [30505:     ] "/branches/SPIRIT_MINIBOOST/boost/" : "old-branches/SPIRIT_MINIBOOST";
    [31469:     ] "/branches/langbinding/boost/" : "old-branches/langbinding";
    [31665:     ] "/branches/QUICKBOOK_PREPROCESSOR/boost/" : "old-branches/QUICKBOOK_PREPROCESSOR";
    [31964:     ] "/branches/fast_array_serialization/boost/" : "old-branches/fast_array_serialization";
    [31998:     ] "/branches/array_wrapper/boost/" : "old-branches/array_wrapper";
    [32077:     ] "/branches/i18n/boost/" : "old-branches/i18n";
    [32411:     ] "/branches/BOOST_VERSION_NUMBER/boost/" : "old-branches/BOOST_VERSION_NUMBER";
    [32442:     ] "/branches/parameter-python/boost/" : "old-branches/parameter-python";
    [32838:     ] "/branches/python-voidptr/boost/" : "old-branches/python-voidptr";
    [32949:     ] "/branches/zip_iterator_fusion/boost/" : "old-branches/zip_iterator_fusion";
    [33721:     ] "/branches/XPRESSIVE_1_1/boost/" : "old-branches/XPRESSIVE_1_1";
    [33749:     ] "/branches/unlabeled-1.32.2/boost/" : "old-branches/unlabeled-1.32.2";
    [33965:     ] "/branches/multi_array_python/boost/" : "old-branches/multi_array_python";
    [34096:     ] "/branches/serialization_header_order/boost/" : "old-branches/serialization_header_order";
    [34548:     ] "/branches/RC_1_33_0/boost/" : "old-branches/RC_1_33_0";
    [35775:     ] "/branches/PROTO2/boost/" : "old-branches/PROTO2";
    [35787:     ] "/branches/SPIRIT_1_9/boost/" : "old-branches/SPIRIT_1_9";
    [37102:     ] "/branches/SPIRIT_1_6/boost/" : "old-branches/SPIRIT_1_6";
    [37185:     ] "/branches/bbv2python/boost/" : "old-branches/bbv2python";
    [37686:     ] "/branches/SPIRIT_RC_1_8_5/boost/" : "old-branches/SPIRIT_RC_1_8_5";
    [37872:     ] "/branches/SPIRIT_1_8/boost/" : "old-branches/SPIRIT_1_8";
    [38008:     ] "/branches/Boost_Jam_994/boost/" : "old-branches/Boost_Jam_994";
    [38288:     ] "/branches/RC_1_34_0/boost/" : "old-branches/RC_1_34_0";
    [38317:     ] "/branches/QUICKBOOK_BACKEND/boost/" : "old-branches/QUICKBOOK_BACKEND";
    [42409:     ] "/branches/unordered/refactor/" : "unordered/refactor";
    [42650:     ] "/branches/serialization_next_release/" : "serialization_next_release";
    [43289:     ] "/branches/fix-links/" : "fix-links";
    [43457:     ] "/branches/iostreams_dev/" : "iostreams_dev";
    [43495:     ] "/branches/CMake-release/" : "CMake-release";
    [43505:     ] "/branches/CMake/release/" : "CMake/release";
    [43910:     ] "/branches/proto/v3/" : "proto/v3";
    [43972:     ] "/branches/unordered/add-on/" : "unordered/add-on";
    [44394:     ] "/branches/proto/v4.bak/" : "proto/v4.bak";
    [44485:     ] "/branches/unordered/dev/" : "unordered/dev";
    [46062:     ] "/branches/doc/" : "doc";
    [46604:     ] "/branches/unordered/trunk/" : "unordered/trunk";
    [47337:     ] "/branches/pdimov_pre_136/" : "pdimov_pre_136";
    [48064:     ] "/branches/build/" : "build";
    [48952:     ] "/branches/initializer-list/" : "initializer-list";
    [49392:     ] "/branches/bcbboost/" : "bcbboost";
    [49603:     ] "/branches/serialization_helper_support/" : "serialization_helper_support";
    [49607:     ] "/branches/proto/v4/" : "proto/v4";
    [51363:     ] "/branches/cpp0x/" : "cpp0x";
    [53358:     ] "/branches/phoenix_v3/" : "phoenix_v3";
    [54138:     ] "/branches/quickbook-1.5/" : "quickbook-1.5";
    [55965:     ] "/branches/sredl_2009_05_proptree_update/" : "sredl_2009_05_proptree_update";
    [59143:     ] "/branches/b2/" : "b2";
    [59531:     ] "/branches/maintenance/1_41/" : "maintenance/1_41";
    [59592:     ] "/branches/quickbook/backend/" : "quickbook/backend";
    [61443:     ] "/branches/inspect/" : "inspect";
    [62517:     ] "/branches/units/autoprefix/" : "units/autoprefix";
    [62928:     ] "/branches/date_time_io_rewrite/" : "date_time_io_rewrite";
    [63100:     ] "/branches/filesystem3/" : "filesystem3";
    [63514:     ] "/branches/ublas-doxygen/" : "ublas-doxygen";
    [65351:     ] "/branches/quickbook-1.5-spirit2/" : "quickbook-1.5-spirit2";
    [68398:     ] "/branches/quickbook-filenames/" : "quickbook-filenames";
    [68409:     ] "/branches/release/" : "release";
    [68640:     ] "/branches/doc-tools-docs/" : "doc-tools-docs";
  }
  tags
  {
    [38353:     ] "/branches/quickbook/QUICKBOOK_BACKEND/" : "old-branches/quickbook/QUICKBOOK_BACKEND";
    [38354:     ] "/branches/quickbook/QUICKBOOK_INCLUDE/" : "old-branches/quickbook/QUICKBOOK_INCLUDE";
    [38355:     ] "/branches/quickbook/QUICKBOOK_PREPROCESSOR/" : "old-branches/quickbook/QUICKBOOK_PREPROCESSOR";
    [38357:     ] "/branches/quickbook/include/" : "old-branches/quickbook/include";
    [38358:     ] "/branches/quickbook/preprocessor/" : "old-branches/quickbook/preprocessor";
    [38360:     ] "/branches/jam/Boost_Jam_994/" : "old-branches/jam/Boost_Jam_994";
    [38361:     ] "/branches/jam/jam_src/" : "old-branches/jam/jam_src";
    [38362:     ] "/branches/jam/pipe_rule/" : "old-branches/jam/pipe_rule";
    [38363:     ] "/branches/jam/version_2_3_2/" : "old-branches/jam/version_2_3_2";
    [38364:     ] "/branches/jam/jam-src/" : "old-branches/jam/jam-src";
    [38365:     ] "/branches/iterator_build/" : "old-branches/iterator_build";
    [38935:     ] "/branches/c++0x/" : "old-branches/c++0x";
    [38974:     ] "/branches/multi_array/" : "old-branches/multi_array";
    [39133:     ] "/branches/libs/filesystem/" : "old-branches/libs/filesystem";
    [39152:     ] "/branches/xpressive/nested_dynamic_regex/" : "old-branches/xpressive/nested_dynamic_regex";
    [39167:     ] "/branches/libs/system/" : "old-branches/libs/system";
    [39700:     ] "/branches/thread_rewrite/" : "old-branches/thread_rewrite";
    [39748:     ] "/branches/tools/jam/" : "old-branches/tools/jam";
    [39749:     ] "/branches/tools/regression/" : "old-branches/tools/regression";
    [39764:     ] "/branches/tools/build/" : "old-branches/tools/build";
    [39882:     ] "/branches/BOOST_BUILD_PYTHON/" : "old-branches/BOOST_BUILD_PYTHON";
    [39974:     ] "/branches/release-tools/" : "old-branches/release-tools";
    [40258:     ] "/branches/jam/4_0/" : "old-branches/jam/4_0";
    [40266:     ] "/branches/hash/" : "old-branches/hash";
    [40383:     ] "/branches/fusion/2_1/" : "old-branches/fusion/2_1";
    [41031:     ] "/branches/system/" : "old-branches/system";
    [41909:     ] "/branches/bitten/" : "old-branches/bitten";
  }
}

repository accumulators : common_branches
{
  content
  {
    "boost/accumulators/" : "include/boost/accumulators/";
    "libs/accumulators/";
  }
}

repository algorithm : common_branches
{
  content
  {
    "boost/algorithm/" : "include/boost/algorithm/";
    "libs/algorithm/";
  }
}

repository any : common_branches
{
  content
  {
    "boost/any.hpp" : "include/boost/any.hpp";
    "libs/any/";
  }
}

repository atomic : common_branches
{
  content
  {
    "boost/atomic.hpp" : "include/boost/atomic.hpp";
    "boost/atomic/" : "include/boost/atomic/";
    "libs/atomic/";
  }
}

repository array : common_branches
{
  content
  {
    "boost/array.hpp" : "include/boost/array.hpp";
    "libs/array/";
  }
}

repository asio : common_branches
{
  content
  {
    "boost/asio.hpp" : "include/boost/asio.hpp";
    "boost/asio/" : "include/boost/asio/";
    "libs/asio/";
  }
}

repository assign : common_branches
{
  content
  {
    "boost/assign.hpp" : "include/boost/assign.hpp";
    "boost/assign/" : "include/boost/assign/";
    "libs/assign/";
  }
}

repository bimap : common_branches
{
  content
  {
    "boost/bimap.hpp" : "include/boost/bimap.hpp";
    "boost/bimap/" : "include/boost/bimap/";
    "libs/bimap/";
  }
}

repository bind : common_branches
{
  content
  {
    "boost/is_placeholder.hpp" : "include/boost/is_placeholder.hpp";
    "boost/bind.hpp" : "include/boost/bind.hpp";
    "boost/bind/" : "include/boost/bind/";
    "boost/mem_fn.hpp" : "include/boost/mem_fn.hpp";
    "libs/bind/";
  }
}

repository chrono : common_branches
{
  content
  {
    "boost/chrono.hpp" : "include/boost/chrono.hpp";
    "boost/chrono/" : "include/boost/chrono/";
    "libs/chrono/";
  }
}

repository circular_buffer : common_branches
{
  content
  {
    "boost/circular_buffer.hpp" : "include/boost/circular_buffer.hpp";
    "boost/circular_buffer/" : "include/boost/circular_buffer/";
    "boost/circular_buffer_fwd.hpp" : "include/boost/circular_buffer_fwd.hpp";
    "libs/circular_buffer/";
  }
}

repository compatibility : common_branches
{
  content
  {
    "boost/compatibility/" : "include/boost/compatibility/";
    "libs/compatibility/";
  }
}

repository concept_check : common_branches
{
  content
  {
    "boost/concept_archetype.hpp" : "include/boost/concept_archetype.hpp";
    "boost/concept_check.hpp" : "include/boost/concept_check.hpp";
    "boost/concept/" : "include/boost/concept/";
    "boost/concept_check/" : "include/boost/concept_check/";
    "libs/concept_check/";
  }
}

repository config : common_branches
{
  content
  {
    "boost/config.hpp" : "include/boost/config.hpp";
    "boost/config/" : "include/boost/config/";
    "libs/config/";
  }
}

repository container : common_branches
{
  content
  {
    "boost/container/" : "include/boost/container/";
    "libs/container/";
  }
}

repository context : common_branches
{
  content
  {
    "[libs/context]";
    "boost/context/" : "include/boost/context/";
    "libs/context/";
  }
}

repository conversion : common_branches
{
  content
  {
    "boost/implicit_cast.hpp" : "include/boost/implicit_cast.hpp";
    "boost/cast.hpp" : "include/boost/cast.hpp";
    "boost/lexical_cast.hpp" : "include/boost/lexical_cast.hpp";
    "boost/detail/lcast_precision.hpp" : "include/boost/detail/lcast_precision.hpp";
    "libs/conversion/";
  }
}

repository core : common_branches
{
  content
  {
    "boost/detail/win/" : "include/boost/detail/win/";
    "boost/detail/allocator_utilities.hpp" : "include/boost/detail/allocator_utilities.hpp";
    "boost/detail/binary_search.hpp" : "include/boost/detail/binary_search.hpp";
    "boost/detail/bitmask.hpp" : "include/boost/detail/bitmask.hpp";
    "boost/detail/catch_exceptions.hpp" : "include/boost/detail/catch_exceptions.hpp";
    "boost/detail/container_fwd.hpp" : "include/boost/detail/container_fwd.hpp";
    "boost/detail/endian.hpp" : "include/boost/detail/endian.hpp";
    "boost/detail/fenv.hpp" : "include/boost/detail/fenv.hpp";
    "boost/detail/has_default_constructor.hpp" : "include/boost/detail/has_default_constructor.hpp";
    "boost/detail/identifier.hpp" : "include/boost/detail/identifier.hpp";
    "boost/detail/indirect_traits.hpp" : "include/boost/detail/indirect_traits.hpp";
    "boost/detail/interlocked.hpp" : "include/boost/detail/interlocked.hpp";
    "boost/detail/is_function_ref_tester.hpp" : "include/boost/detail/is_function_ref_tester.hpp";
    "boost/detail/is_incrementable.hpp" : "include/boost/detail/is_incrementable.hpp";
    "boost/detail/is_sorted.hpp" : "include/boost/detail/is_sorted.hpp";
    "boost/detail/is_xxx.hpp" : "include/boost/detail/is_xxx.hpp";
    "boost/detail/iterator.hpp" : "include/boost/detail/iterator.hpp";
    "boost/detail/lightweight_main.hpp" : "include/boost/detail/lightweight_main.hpp";
    "boost/detail/lightweight_mutex.hpp" : "include/boost/detail/lightweight_mutex.hpp";
    "boost/detail/lightweight_test.hpp" : "include/boost/detail/lightweight_test.hpp";
    "boost/detail/lightweight_thread.hpp" : "include/boost/detail/lightweight_thread.hpp";
    "boost/detail/limits.hpp" : "include/boost/detail/limits.hpp";
    "boost/detail/named_template_params.hpp" : "include/boost/detail/named_template_params.hpp";
    "boost/detail/no_exceptions_support.hpp" : "include/boost/detail/no_exceptions_support.hpp";
    "boost/detail/none_t.hpp" : "include/boost/detail/none_t.hpp";
    "boost/detail/numeric_traits.hpp" : "include/boost/detail/numeric_traits.hpp";
    "boost/detail/quick_allocator.hpp" : "include/boost/detail/quick_allocator.hpp";
    "boost/detail/reference_content.hpp" : "include/boost/detail/reference_content.hpp";
    "boost/detail/scoped_enum_emulation.hpp" : "include/boost/detail/scoped_enum_emulation.hpp";
    "boost/detail/select_type.hpp" : "include/boost/detail/select_type.hpp";
    "boost/detail/templated_streams.hpp" : "include/boost/detail/templated_streams.hpp";
    "boost/detail/utf8_codecvt_facet.cpp" : "include/boost/detail/utf8_codecvt_facet.cpp";
    "boost/detail/utf8_codecvt_facet.hpp" : "include/boost/detail/utf8_codecvt_facet.hpp";
    "boost/detail/utf8_codecvt_facet.ipp" : "include/boost/detail/utf8_codecvt_facet.ipp";
    "boost/detail/workaround.hpp" : "include/boost/detail/workaround.hpp";
    "boost/functional/detail/container_fwd.hpp" : "include/boost/functional/detail/container_fwd.hpp";
    "boost/pending/cstddef.hpp" : "include/boost/pending/cstddef.hpp";
    "boost/pending/integer_log2.hpp" : "include/boost/pending/integer_log2.hpp";
    "boost/blank.hpp" : "include/boost/blank.hpp";
    "boost/blank_fwd.hpp" : "include/boost/blank_fwd.hpp";
    "boost/cstdlib.hpp" : "include/boost/cstdlib.hpp";
    "boost/indirect_reference.hpp" : "include/boost/indirect_reference.hpp";
    "boost/limits.hpp" : "include/boost/limits.hpp";
    "boost/non_type.hpp" : "include/boost/non_type.hpp";
    "boost/type.hpp" : "include/boost/type.hpp";
    "boost/version.hpp" : "include/boost/version.hpp";
    "boost/visit_each.hpp" : "include/boost/visit_each.hpp";
    "libs/detail/test/" : "test/";
  }
}

repository coroutine : common_branches
{
  content
  {
    "boost/coroutine/" : "include/boost/coroutine/";
    "libs/coroutine/";
  }
}

repository crc : common_branches
{
  content
  {
    "boost/crc.hpp" : "include/boost/crc.hpp";
    "libs/crc/";
  }
}

repository date_time : common_branches
{
  content
  {
    "boost/date_time.hpp" : "include/boost/date_time.hpp";
    "boost/date_time/" : "include/boost/date_time/";
    "libs/date_time/";
  }
}

repository disjoint_sets : common_branches
{
  content
  {
    "boost/pending/disjoint_sets.hpp" : "include/boost/pending/disjoint_sets.hpp";
    "boost/pending/detail/disjoint_sets.hpp" : "include/boost/pending/detail/disjoint_sets.hpp";
    "libs/disjoint_sets/";
  }
}

repository dynamic_bitset : common_branches
{
  content
  {
    "boost/dynamic_bitset.hpp" : "include/boost/dynamic_bitset.hpp";
    "boost/dynamic_bitset/" : "include/boost/dynamic_bitset/";
    "boost/dynamic_bitset_fwd.hpp" : "include/boost/dynamic_bitset_fwd.hpp";
    "boost/detail/dynamic_bitset.hpp" : "include/boost/detail/dynamic_bitset.hpp";
    "boost/pending/lowest_bit.hpp" : "include/boost/pending/lowest_bit.hpp";
    "libs/dynamic_bitset/";
  }
}

repository exception : common_branches
{
  content
  {
    "boost/exception_ptr.hpp" : "include/boost/exception_ptr.hpp";
    "boost/throw_exception.hpp" : "include/boost/throw_exception.hpp";
    "boost/exception/" : "include/boost/exception/";
    "libs/exception/";
  }
}

repository filesystem : common_branches
{
  content
  {
    "boost/filesystem.hpp" : "include/boost/filesystem.hpp";
    "boost/filesystem/" : "include/boost/filesystem/";
    "libs/filesystem/";
  }
}

repository flyweight : common_branches
{
  content
  {
    "boost/flyweight.hpp" : "include/boost/flyweight.hpp";
    "boost/flyweight/" : "include/boost/flyweight";
    "libs/flyweight/";
  }
}

repository foreach : common_branches
{
  content
  {
    "boost/foreach.hpp" : "include/boost/foreach.hpp";
    "boost/foreach_fwd.hpp" : "include/boost/foreach_fwd.hpp";
    "libs/foreach/";
  }
}

repository format : common_branches
{
  content
  {
    "boost/format.hpp" : "include/boost/format.hpp";
    "boost/format/" : "include/boost/format/";
    "libs/format/";
  }
}

repository function : common_branches
{
  content
  {
    "boost/function.hpp" : "include/boost/function.hpp";
    "boost/function_equal.hpp" : "include/boost/function_equal.hpp";
    "boost/function/" : "include/boost/function/";
    "libs/function/";
  }
}

repository functional : common_branches
{
  content
  {
    "boost/functional/overloaded_function/" : "include/boost/functional/overloaded_function/";
    "boost/functional/factory.hpp" : "include/boost/functional/factory.hpp";
    "boost/functional/forward_adapter.hpp" : "include/boost/functional/forward_adapter.hpp";
    "boost/functional/lightweight_forward_adapter.hpp" : "include/boost/functional/lightweight_forward_adapter.hpp";
    "boost/functional/overloaded_function.hpp" : "include/boost/functional/overloaded_function.hpp";
    "boost/functional/value_factory.hpp" : "include/boost/functional/value_factory.hpp";
    "boost/functional.hpp" : "include/boost/functional.hpp";
    "libs/functional/factory/" : "factory/";
    "libs/functional/forward/" : "forward/";
    "libs/functional/overloaded_function/" : "overloaded_function/";
    "libs/functional/test/" : "test/";
    "libs/functional/binders.html" : "binders.html";
    "libs/functional/function_test.cpp" : "function_test.cpp";
    "libs/functional/function_traits.html" : "function_traits.html";
    "libs/functional/index.html" : "index.html";
    "libs/functional/mem_fun.html" : "mem_fun.html";
    "libs/functional/negators.html" : "negators.html";
    "libs/functional/ptr_fun.html" : "ptr_fun.html";
    "libs/functional/sublibs" : "sublibs";
  }
}

repository functional_hash : common_branches
{
  content
  {
    "boost/functional/hash/" : "include/boost/functional/hash/";
    "boost/functional/hash.hpp" : "include/boost/functional/hash.hpp";
    "boost/functional/hash_fwd.hpp" : "include/boost/functional/hash_fwd.hpp";
    "libs/functional/hash/";
  }
}

repository function_types : common_branches
{
  content
  {
    "boost/function_types/" : "include/boost/function_types/";
    "libs/function_types/";
  }
}

repository fusion : common_branches
{
  content
  {
    "boost/fusion/" : "include/boost/fusion/";
    "libs/fusion/";
  }
}

repository geometry : common_branches
{
  content
  {
    "boost/geometry.hpp" : " include/boost/geometry.hpp";
    "boost/geometry/" : "include/boost/geometry/";
    "libs/geometry/";
  }
}

repository gil : common_branches
{
  content
  {
    "boost/gil/" : "include/boost/gil/";
    "libs/gil/";
  }
}

// repository graph_parallel should come before repository graph.
// In the graph repository, we use "boost/graph/".
// Since graph_parallel has a higher precedence, all files from
// <boostroot>/boost/graph/ that are not matched by graph_parallel will end up
// in the graph repository.

repository graph_parallel : common_branches
{
  content
  {
    "boost/graph/distributed/"                : "include/boost/graph/distributed/";
    "boost/graph/accounting.hpp"              : "include/boost/graph/accounting.hpp";
    "boost/pending/property_serialize.hpp"    : "include/boost/pending/property_serialize.hpp";
    "boost/graph/parallel/"                   : "include/boost/graph/parallel/";
    "libs/graph_parallel/";
  }
}

repository graph : common_branches
{
  content
  {
    "boost/detail/algorithm.hpp"              : "include/boost/detail/algorithm.hpp";
    "boost/graph/"                            : "include/boost/graph/";
    "boost/pending/bucket_sorter.hpp"         : "include/boost/pending/bucket_sorter.hpp";
    "boost/pending/container_traits.hpp"      : "include/boost/pending/container_traits.hpp";
    "boost/pending/detail/property.hpp"       : "include/boost/pending/detail/property.hpp";
    "boost/pending/fenced_priority_queue.hpp" : "include/boost/pending/fenced_priority_queue.hpp";
    "boost/pending/fibonacci_heap.hpp"        : "include/boost/pending/fibonacci_heap.hpp";
    "boost/pending/indirect_cmp.hpp"          : "include/boost/pending/indirect_cmp.hpp";
    "boost/pending/is_heap.hpp"               : "include/boost/pending/is_heap.hpp";
    "boost/pending/mutable_heap.hpp"          : "include/boost/pending/mutable_heap.hpp";
    "boost/pending/mutable_queue.hpp"         : "include/boost/pending/mutable_queue.hpp";
    "boost/pending/property.hpp"              : "include/boost/pending/property.hpp";
    "boost/pending/stringtok.hpp"             : "include/boost/pending/stringtok.hpp";
    "boost/pending/queue.hpp"                 : "include/boost/pending/queue.hpp";
    "boost/pending/relaxed_heap.hpp"          : "include/boost/pending/relaxed_heap.hpp";
    "libs/graph/";
  }
}

repository heap : common_branches
{
  content
  {
    "boost/heap/" : "include/boost/heap/";
    "libs/heap/";
  }
}

repository icl : common_branches
{
  content
  {
    "boost/icl/" : "include/boost/icl/";
    "libs/icl/";
  }
}

repository integer : common_branches
{
  content
  {
    "boost/stdint.h" : "include/boost/stdint.h";
    "boost/cstdint.hpp" : "include/boost/cstdint.hpp";
    "boost/integer.hpp" : "include/boost/integer.hpp";
    "boost/integer_fwd.hpp" : "include/boost/integer_fwd.hpp";
    "boost/integer_traits.hpp" : "include/boost/integer_traits.hpp";
    "boost/integer/" : "include/boost/integer/";
    "libs/integer/";
  }
}

repository interprocess : common_branches
{
  content
  {
    "boost/interprocess/" : "include/boost/interprocess/";
    "libs/interprocess/";
  }
}

repository intrusive : common_branches
{
  content
  {
    "boost/intrusive/" : "include/boost/intrusive/";
    "libs/intrusive/";
  }
}

repository io : common_branches
{
  content
  {
    "boost/io/" : "include/boost/io/";
    "boost/io_fwd.hpp" : "include/boost/io_fwd.hpp";
    "libs/io/";
  }
}

repository iostreams : common_branches
{
  content
  {
    "boost/iostreams/" : "include/boost/iostreams/";
    "libs/iostreams/";
  }
}

repository iterator : common_branches
{
  content
  {
    "boost/iterator.hpp" : "include/boost/iterator.hpp";
    "boost/iterator_adaptors.hpp" : "include/boost/iterator_adaptors.hpp";
    "boost/function_output_iterator.hpp" : "include/boost/function_output_iterator.hpp";
    "boost/pending/detail/int_iterator.hpp" : "include/boost/pending/detail/int_iterator.hpp";
    "boost/pending/iterator_adaptors.hpp" : "include/boost/pending/iterator_adaptors.hpp";
    "boost/pending/iterator_tests.hpp" : "include/boost/pending/iterator_tests.hpp";
    "boost/pointee.hpp" : "include/boost/pointee.hpp";
    "boost/shared_container_iterator.hpp" : "include/boost/shared_container_iterator.hpp";
    "boost/iterator/" : "include/boost/iterator/";
    "libs/iterator/";
  }
}

repository lambda : common_branches
{
  content
  {
    "boost/lambda/" : "include/boost/lambda/";
    "libs/lambda/";
  }
}

repository locale : common_branches
{
  content
  {
    "boost/locale.hpp" : "include/boost/locale.hpp";
    "boost/locale/" : "include/boost/locale/";
    "libs/locale/";
  }
}

repository local_function : common_branches
{
  content
  {
    "boost/local_function.hpp" : "include/boost/local_function.hpp";
    "boost/local_function/" : "include/boost/local_function/";
    "libs/local_function/";
  }
}

repository lockfree : common_branches
{
  content
  {
    "boost/lockfree/" : "include/boost/lockfree/";
    "libs/lockfree/";
  }
}

repository logic : common_branches
{
  content
  {
    "boost/logic/" : "include/boost/logic/";
    "libs/logic/";
  }
}

repository math : common_branches
{
  content
  {
    "boost/math/" : "include/boost/math/";
    "boost/math_fwd.hpp" : "include/boost/math_fwd.hpp";
    "libs/math/";
  }
}

repository move : common_branches
{
  content
  {
    "boost/move/" : "include/boost/move/";
    "libs/move/";
  }
}

repository mpi : common_branches
{
  content
  {
    "boost/mpi.hpp" : "include/boost/mpi.hpp";
    "boost/mpi/" : "include/boost/mpi/";
    "libs/mpi/";
  }
}

repository mpl : common_branches
{
  content
  {
    "boost/mpl/" : "include/boost/mpl/";
    "libs/mpl/";
  }
}

repository msm : common_branches
{
  content
  {
    "boost/msm/" : "include/boost/msm/";
    "libs/msm/";
  }
}

repository multi_array : common_branches
{
  content
  {
    "boost/multi_array.hpp" : "include/boost/multi_array.hpp";
    "boost/multi_array/" : "include/boost/multi_array/";
    "libs/multi_array/";
  }
}

repository multi_index : common_branches
{
  content
  {
    "boost/multi_index_container.hpp" : "include/boost/multi_index_container.hpp";
    "boost/multi_index_container_fwd.hpp" : "include/boost/multi_index_container_fwd.hpp";
    "boost/multi_index/" : "include/boost/multi_index/";
    "libs/multi_index/";
  }
}

repository multiprecision : common_branches
{
  content
  {
    "boost/multiprecision/" : "include/boost/multiprecision/";
    "libs/multiprecision/";
  }
}

repository numeric_conversion : common_branches
{
  content
  {
    "[libs/numeric/conversion]";
    "boost/numeric/conversion/" : "include/boost/numeric/conversion/";
    "libs/numeric/conversion/";
  }
}

repository interval : common_branches
{
  content
  {
    "boost/numeric/interval/" : "include/boost/numeric/interval/";
    "boost/numeric/interval.hpp" : "include/boost/numeric/interval.hpp";
    "libs/numeric/interval/";
  }
}

repository odeint : common_branches
{
  content
  {
    "boost/numeric/odeint/" : "include/boost/numeric/odeint/";
    "boost/numeric/odeint.hpp" : "include/boost/numeric/odeint.hpp";
    "libs/numeric/odeint/";
  }
}

repository ublas : common_branches
{
  content
  {
    "boost/numeric/ublas/" : "include/boost/numeric/ublas/";
    "libs/numeric/ublas/";
  }
}

repository optional : common_branches
{
  content
  {
    "boost/none.hpp" : "include/boost/none.hpp";
    "boost/none_t.hpp" : "include/boost/none_t.hpp";
    "boost/optional.hpp" : "include/boost/optional.hpp";
    "boost/optional/" : "include/boost/optional/";
    "libs/optional/";
  }
}

repository parameter : common_branches
{
  content
  {
    "boost/parameter.hpp" : "include/boost/parameter.hpp";
    "boost/parameter/" : "include/boost/parameter/";
    "libs/parameter/";
  }
}

repository phoenix : common_branches
{
  content
  {
    "boost/phoenix.hpp" : "include/boost/phoenix.hpp";
    "boost/phoenix/" : "include/boost/phoenix/";
    "libs/phoenix/";
  }
}

repository polygon : common_branches
{
  content
  {
    "boost/polygon/" : "include/boost/polygon/";
    "libs/polygon/";
  }
}

repository pool : common_branches
{
  content
  {
    "boost/pool/" : "include/boost/pool/";
    "libs/pool/";
  }
}

repository preprocessor : common_branches
{
  content
  {
    "boost/preprocessor.hpp" : "include/boost/preprocessor.hpp";
    "boost/preprocessor/" : "include/boost/preprocessor/";
    "libs/preprocessor/";
  }
}

repository program_options : common_branches
{
  content
  {
    "boost/program_options.hpp" : "include/boost/program_options.hpp";
    "boost/program_options/" : "include/boost/program_options/";
    "libs/program_options/";
  }
}

repository property_map : common_branches
{
  content
  {
    "boost/property_map/" : "include/boost/property_map/";
    "libs/property_map/";
  }
}

repository property_tree : common_branches
{
  content
  {
    "boost/property_tree/" : "include/boost/property_tree/";
    "libs/property_tree/";
  }
}

repository proto : common_branches
{
  content
  {
    "boost/proto/" : "include/boost/proto/";
    "libs/proto/";
  }
}

repository ptr_container : common_branches
{
  content
  {
    "boost/ptr_container/" : "include/boost/ptr_container/";
    "libs/ptr_container/";
  }
}

repository python : common_branches
{
  content
  {
    "boost/python.hpp" : "include/boost/python.hpp";
    "boost/python/" : "include/boost/python/";
    "libs/python/";
  }
}

repository random : common_branches
{
  content
  {
    "boost/nondet_random.hpp" : "include/boost/nondet_random.hpp";
    "boost/random.hpp" : "include/boost/random.hpp";
    "boost/random/" : "include/boost/random/";
    "libs/random/";
  }
}

repository range : common_branches
{
  content
  {
    "boost/range.hpp" : "include/boost/range.hpp";
    "boost/range/" : "include/boost/range/";
    "libs/range/";
  }
}

repository ratio : common_branches
{
  content
  {
    "boost/ratio.hpp" : "include/boost/ratio.hpp";
    "boost/ratio/" : "include/boost/ratio/";
    "libs/ratio/";
  }
}

repository rational : common_branches
{
  content
  {
    "boost/rational.hpp" : "include/boost/rational.hpp";
    "libs/rational/";
  }
}

repository regex : common_branches
{
  content
  {
    "boost/cregex.hpp" : "include/boost/cregex.hpp";
    "boost/regex.h" : "include/boost/regex.h";
    "boost/regex.hpp" : "include/boost/regex.hpp";
    "boost/regex_fwd.hpp" : "include/boost/regex_fwd.hpp";
    "boost/regex/" : "include/boost/regex/";
    "libs/regex/";
  }
}

repository scope_exit : common_branches
{
  content
  {
    "boost/scope_exit.hpp" : "include/boost/scope_exit.hpp";
    "libs/scope_exit/";
  }
}

repository serialization : common_branches
{
  content
  {
    "boost/archive/" : "include/boost/archive/";
    "boost/serialization/" : "include/boost/serialization/";
    "boost/strong_typedef.hpp" : "include/boost/strong_typedef.hpp";
    "libs/serialization/";
  }
}

repository signals : common_branches
{
  content
  {
    "boost/last_value.hpp" : "include/boost/last_value.hpp";
    "boost/signal.hpp" : "include/boost/signal.hpp";
    "boost/signals.hpp" : "include/boost/signals.hpp";
    "boost/signals/" : "include/boost/signals/";
    "libs/signals/";
  }
}

repository signals2 : common_branches
{
  content
  {
    "boost/signals2.hpp" : "include/boost/signals2.hpp";
    "boost/signals2/" : "include/boost/signals2/";
    "libs/signals2/";
  }
}

repository smart_ptr : common_branches
{
  content
  {
    "boost/detail/atomic_count.hpp" : "include/boost/detail/atomic_count.hpp";
    "boost/detail/sp_typeinfo.hpp" : "include/boost/detail/sp_typeinfo.hpp";
    "boost/enable_shared_from_this.hpp" : "include/boost/enable_shared_from_this.hpp";
    "boost/intrusive_ptr.hpp" : "include/boost/intrusive_ptr.hpp";
    "boost/get_pointer.hpp" : "include/boost/get_pointer.hpp";
    "boost/make_shared.hpp" : "include/boost/make_shared.hpp";
    "boost/memory_order.hpp" : "include/boost/memory_order.hpp";
    "boost/pointer_cast.hpp" : "include/boost/pointer_cast.hpp";
    "boost/pointer_to_other.hpp" : "include/boost/pointer_to_other.hpp";
    "boost/scoped_array.hpp" : "include/boost/scoped_array.hpp";
    "boost/scoped_ptr.hpp" : "include/boost/scoped_ptr.hpp";
    "boost/shared_array.hpp" : "include/boost/shared_array.hpp";
    "boost/shared_ptr.hpp" : "include/boost/shared_ptr.hpp";
    "boost/smart_ptr.hpp" : "include/boost/smart_ptr.hpp";
    "boost/weak_ptr.hpp" : "include/boost/weak_ptr.hpp";
    "boost/smart_ptr/" : "include/boost/smart_ptr/";
    "libs/smart_ptr/";
  }
}

repository spirit : common_branches
{
  content
  {
    "boost/spirit.hpp" : "include/boost/spirit.hpp";
    "boost/spirit/" : "include/boost/spirit/";
    "libs/spirit/";
  }
}

repository statechart : common_branches
{
  content
  {
    "boost/statechart/" : "include/boost/statechart/";
    "libs/statechart/";
  }
}

repository static_assert : common_branches
{
  content
  {
    "boost/static_assert.hpp" : "include/boost/static_assert.hpp";
    "libs/static_assert/";
  }
}

repository system : common_branches
{
  content
  {
    "boost/cerrno.hpp" : "include/boost/cerrno.hpp";
    "boost/system/" : "include/boost/system/";
    "libs/system/";
  }
}

repository test : common_branches
{
  content
  {
    "boost/test/" : "include/boost/test/";
    "libs/test/";
  }
}

repository thread : common_branches
{
  content
  {
    "boost/thread.hpp" : "include/boost/thread.hpp";
    "boost/thread/" : "include/boost/thread/";
    "libs/thread/";
  }
}

repository timer : common_branches
{
  content
  {
    "boost/progress.hpp" : "include/boost/progress.hpp";
    "boost/timer.hpp" : "include/boost/timer.hpp";
    "boost/timer/" : "include/boost/timer/";
    "libs/timer/";
  }
}

repository tokenizer : common_branches
{
  content
  {
    "boost/token_functions.hpp" : "include/boost/token_functions.hpp";
    "boost/token_iterator.hpp" : "include/boost/token_iterator.hpp";
    "boost/tokenizer.hpp" : "include/boost/tokenizer.hpp";
    "libs/tokenizer/";
  }
}

repository tr1 : common_branches
{
  content
  {
    "boost/tr1/" : "include/boost/tr1/";
    "libs/tr1/";
  }
}

repository tti : common_branches
{
  content
  {
    "boost/tti/" : "include/boost/tti/";
    "libs/tti/";
  }
}

repository tuple : common_branches
{
  content
  {
    "boost/tuple/" : "include/boost/tuple/";
    "libs/tuple/";
  }
}

repository typeof : common_branches
{
  content
  {
    "boost/typeof/" : "include/boost/typeof/";
    "libs/typeof/";
  }
}

repository type_traits : common_branches
{
  content
  {
    "boost/aligned_storage.hpp" : "include/boost/aligned_storage.hpp";
    "boost/detail/type_traits.hpp" : "include/boost/detail/type_traits.hpp";
    "boost/detail/ob_type_traits.hpp" : "include/boost/detail/ob_type_traits.hpp";
    "boost/type_traits.hpp" : "include/boost/type_traits.hpp";
    "boost/type_traits/" : "include/boost/type_traits/";
    "libs/type_traits/";
  }
}

repository units : common_branches
{
  content
  {
    "boost/units/" : "include/boost/units/";
    "libs/units/";
  }
}

repository unordered : common_branches
{
  content
  {
    "boost/unordered_map.hpp" : "include/boost/unordered_map.hpp";
    "boost/unordered_set.hpp" : "include/boost/unordered_set.hpp";
    "boost/unordered/" : "include/boost/unordered/";
    "libs/unordered/";
  }
}

repository utility : common_branches
{
  content
  {
    "boost/exception.hpp" : "include/boost/exception.hpp";
    "boost/swap.hpp" : "include/boost/swap.hpp";
    "boost/ref.hpp" : "include/boost/ref.hpp";
    "boost/assert.hpp" : "include/boost/assert.hpp";
    "boost/operators.hpp" : "include/boost/operators.hpp";
    "boost/noncopyable.hpp" : "include/boost/noncopyable.hpp";
    "boost/next_prior.hpp" : "include/boost/next_prior.hpp";
    "boost/generator_iterator.hpp" : "include/boost/generator_iterator.hpp";
    "boost/current_function.hpp" : "include/boost/current_function.hpp";
    "boost/checked_delete.hpp" : "include/boost/checked_delete.hpp";
    "boost/call_traits.hpp" : "include/boost/call_traits.hpp";
    "boost/detail/call_traits.hpp" : "include/boost/detail/call_traits.hpp";
    "boost/detail/ob_call_traits.hpp" : "include/boost/detail/ob_call_traits.hpp";
    "boost/compressed_pair.hpp" : "include/boost/compressed_pair.hpp";
    "boost/detail/compressed_pair.hpp" : "include/boost/detail/compressed_pair.hpp";
    "boost/detail/ob_compressed_pair.hpp" : "include/boost/detail/ob_compressed_pair.hpp";
    "boost/utility.hpp" : "include/boost/utility.hpp";
    "boost/utility/" : "include/boost/utility/";
    "libs/utility/";
  }
}

repository uuid : common_branches
{
  content
  {
    "boost/uuid/" : "include/boost/uuid/";
    "libs/uuid/";
  }
}

repository variant : common_branches
{
  content
  {
    "boost/variant.hpp" : "include/boost/variant.hpp";
    "boost/variant/" : "include/boost/variant/";
    "libs/variant/";
  }
}

repository wave : common_branches
{
  content
  {
    "boost/wave.hpp" : "include/boost/wave.hpp";
    "boost/wave/" : "include/boost/wave/";
    "tools/wave/" : "tool/";
    "libs/wave/";
  }
}

repository xpressive : common_branches
{
  content
  {
    "boost/xpressive/" : "include/boost/xpressive/";
    "libs/xpressive/";
  }
}

repository auto_index : common_branches
{
  content
  {
    "tools/auto_index/";
  }
}

repository bcp : common_branches
{
  content
  {
    "tools/bcp/";
  }
}

repository boostbook : common_branches
{
  content
  {
    "tools/boostbook/";
  }
}

repository build : common_branches
{
  content
  {
    "tools/build/v2/";
  }
}

repository inspect : common_branches
{
  content
  {
    "tools/inspect/";
  }
}

repository litre : common_branches
{
  content
  {
    "tools/litre/";
  }
}

repository quickbook : common_branches
{
  content
  {
    "tools/quickbook/";
  }
}

repository sandbox
{
  content
  {
    "sandbox/"          : "trunk/";
    "sandbox-branches/" : "branches/";
    "sandbox-tags/"     : "tags/";
  }
  branches
  {
    [:] "/" : "master";
  }
}

// TODO: call the master branch "gh-pages"? Then Github may run the Boost website!
repository website
{
  branches
  {
    [:]    "/website/workplace/"        : "workplace";
    [:137] "/website/"                  : "master";
    [138:] "/website/public_html/live/" : "master";
    [138:] "/website/public_html/beta/" : "beta";
    [:]    "/website/public_html/dev/"  : "dev";
  }
}

repository boost : common_branches
{
  content
  {
    "doc/"                     : "doc/";
    "libs/numeric/index.html"  : "libs/numeric/index.html";
    "libs/numeric/sublibs"     : "libs/numeric/sublibs";
    "libs/compiler.cfg"        : "libs/compiler.cfg";
    "libs/compiler_status.htm" : "libs/compiler_status.htm";
    "libs/cs-beos.html"        : "libs/cs-beos.html";
    "libs/cs-irix.html"        : "libs/cs-irix.html";
    "libs/cs-irix6.html"       : "libs/cs-irix6.html";
    "libs/cs-linux.html"       : "libs/cs-linux.html";
    "libs/cs-linux2.html"      : "libs/cs-linux2.html";
    "libs/cs-osf1V5.html"      : "libs/cs-osf1V5.html";
    "libs/cs-tru64.html"       : "libs/cs-tru64.html";
    "libs/cs-win32.html"       : "libs/cs-win32.html";
    "libs/expected_results.xml" : "libs/expected_results.xml";
    "libs/hdr_depend.html"     : "libs/hdr_depend.html";
    "libs/libraries.htm"       : "libs/libraries.htm";
    "libs/maintainers.txt"     : "libs/maintainers.txt";
    "libs/platform_maintainers.txt" : "libs/platform_maintainers.txt";
    "libs/regression.cfg"      : "libs/regression.cfg";
    "libs/regression.cpp"      : "libs/regression.cpp";
    "libs/regrtest.cpp"        : "libs/regrtest.cpp";
    "libs/regrtest.py"         : "libs/regrtest.py";
    "libs/regrtest_files.txt"  : "libs/regrtest_files.txt";
    "more/"                    : "more/";
    "people/"                  : "people/";
    "status/"                  : "status/";

    // lets grab all tools tools that are not matched somewhere else already.
    "tools/"                   : "tools/";

    "INSTALL"                  : "INSTALL";
    "Jamfile"                  : "Jamfile";
    "Jamfile.v2"               : "Jamfile.v2";
    "Jamroot"                  : "Jamroot";
    "Jamrules"                 : "Jamrules";
    "LICENSE_1_0.txt"          : "LICENSE_1_0.txt";
    "README"                   : "README";
    "boost-build.jam"          : "boost-build.jam";
    "boost.css"                : "boost.css";
    "boost.png"                : "boost.png";
    "boostcpp.jam"             : "boostcpp.jam";
    "boostcpp.py"              : "boostcpp.py";
    "bootstrap.bat"            : "bootstrap.bat";
    "bootstrap.sh"             : "bootstrap.sh";
    "configure"                : "configure";
    "c++boost.gif"             : "c++boost.gif";
    "google_logo_40wht.png"    : "google_logo_40wht.png";
    "index.htm"                : "index.htm";
    "index.html"               : "index.html";
    "libraries.htm"            : "libraries.htm";
    "people.htm"               : "people.htm";
    "project-root.jam"         : "project-root.jam";
    "rst.css"                  : "rst.css";
  }
}

